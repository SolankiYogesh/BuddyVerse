import {PhotoModel} from 'components/camera-modal/models/photoModel';
import appConstants from 'models/appConstants';

import {Image, Linking, Platform} from 'react-native';
import {debugLogs} from 'utils/logs/logs';
import Share from 'react-native-share';
import Toast from 'react-native-root-toast';
import {EventEmitter} from 'fbemitter';
import {feedMediaModel} from 'models/create-feed/feedMediaModel';
import RNFS from 'react-native-fs';
import _ from 'lodash';
import {data, dataSet2} from './moderationWords';
import {
  UsersQuery,
  Communities,
  PagingQuery,
  SendNotificationTarget,
  UserIdList,
  NotificationContent,
  Notifications,
  Action,
  GetSocial,
  InviteContent,
  Invites,
} from 'getsocial-react-native-sdk';
import ignoreCase from 'ignore-case';
import axios from 'axios';
import EndPoints from '../../Network/EndPoints';
import {feedDataModel} from '../../models/create-feed/feedDataModel';

export const openLink = (url: string) => {
  Linking.canOpenURL(url).then(() => {
    debugLogs('URL works');
    Linking.openURL(url).catch(error => {
      debugLogs('An error has occurred in URL:', error);
    });
  });
};

export const getMediaUrl = (objMedia: PhotoModel) => {
  if (Platform.OS === 'ios') {
    if (objMedia.uri.includes('file:///')) {
      return objMedia?.uri;
    }
    const appleId = objMedia.uri.substring(5, 41);
    const ext = objMedia.type === 'image' ? 'JPG' : 'mp4';
    return `assets-library://asset/asset.${ext}?id=${appleId}&ext=${ext}`;
  } else {
    // debugLogs('Media url', objMedia.uri);
    return objMedia.uri;
  }
};

export const getUploadMediaUrl = async (objMedia: PhotoModel) => {
  if (Platform.OS === 'ios') {
    if (objMedia.uri.includes('file:///')) {
      return objMedia?.uri;
    }
    const appleId = objMedia.uri.substring(5, 41);
    const ext = objMedia.type === 'image' ? 'JPG' : 'mp4';
    const encodedUri = `assets-library://asset/asset.${ext}?id=${appleId}&ext=${ext}`;
    const destPath = `${RNFS.TemporaryDirectoryPath}${Math.random()
      .toString(36)
      .substring(7)}.${ext}`;
    // const destPath = `${RNFS.TemporaryDirectoryPath}temp.${ext}`;
    let uri = objMedia.uri;
    if (objMedia.type === 'image') {
      uri = await RNFS.copyAssetsFileIOS(
        encodedUri,
        destPath,
        objMedia.width || 500,
        objMedia.height || 500,
        1.0,
        1.0,
        'contain',
      );
    } else {
      uri = await RNFS.copyAssetsVideoIOS(encodedUri, destPath);
    }
    // debugLogs('local media url', uri);
    return `file://${uri}`;
    // const dest = `${RNFS.TemporaryDirectoryPath}${Math.random()
    //   .toString(36)
    //   .substring(7)}.jpg`;
    // const imagePATH = await RNFS.copyAssetsFileIOS(
    //   photoPATH,
    //   dest,
    //   500,
    //   500,
    //   1.0,
    //   1.0,
    //   'contain',
    // );
    // return imagePATH;
    // return `assets-library://asset/asset.${ext}?id=${appleId}&ext=${ext}`;
  } else {
    // debugLogs('Media url', objMedia.uri);
    return objMedia.uri;
  }
};

const getVideoURL = (videoUrl: string, fName: string) => {
  if (_.includes(videoUrl, 'm3u8')) {
    return `https://d1wd77iqpfpytn.cloudfront.net/public/${fName}`;
  } else {
    return videoUrl;
  }
};

export const shareGreenTalkContent = (referrelURL, feed, user) => {
  return new Promise(resolve => {
    let shareOptions = {
      title: appConstants.appName,
      message:
        user?.displayName + ' shared a post on Greenlync.' + '  ' + referrelURL,
      subject:
        feed?.type ||
        'Check this out on Greenlync, the App that everyone is talking about! See ya inside ðŸ”¥ ',
    };
    console.log('shareOptions', shareOptions);

    Share.open(shareOptions)
      .then(async res => {
        debugLogs('share response', res);

        resolve(true);
      })
      .catch(async err => {
        debugLogs('share response error', err);

        resolve(false);
      });
  });
};

export const shareContent = (
  referrelURL: string,
  feed: feedDataModel,
  user,
) => {
  return new Promise(async resolve => {
    let fileName = 'feed';
    const isImage = !!feed?.mediaAttachments[0]?.imageUrl;
    const isGreenTalk = feed?.source?.id === appConstants.APIGreenTalk;
    if (isGreenTalk) {
      shareGreenTalkContent(referrelURL, feed, user)
        .then(() => {
          resolve(true);
        })
        .catch(() => {
          resolve(false);
        });
      return;
    }

    if (isImage) {
      fileName =
        feed?.mediaAttachments[0]?.imageUrl?.split('/')?.pop() || 'feed';

      fileName = fileName.split('.');
      fileName = `${fileName[0]}-original.${fileName[1]}`;
    } else {
      const index =
        feed?.mediaAttachments[0]?.videoUrl?.lastIndexOf('mediafilename=');
      const removeExt = feed?.mediaAttachments[0]?.videoUrl?.replace(
        '.mp4',
        '',
      );
      const finalString = removeExt?.slice(index, removeExt?.length);
      fileName = finalString?.replace('mediafilename=', '') + '.mp4';
    }
    const videoUrl = getVideoURL(feed?.mediaAttachments[0]?.videoUrl, fileName);

    !isImage &&
      !isGreenTalk &&
      showToast('Preparing the share. Give it a sec.');
    RNFS.downloadFile({
      fromUrl: isImage ? feed?.mediaAttachments[0]?.imageUrl : videoUrl,
      toFile: `${RNFS.CachesDirectoryPath}/${fileName}`,
    }).promise.then(async () => {
      const isExist = await RNFS.exists(
        `${RNFS.CachesDirectoryPath}/${fileName}`,
      );

      if (isExist) {
        const base64 =
          isImage &&
          (await RNFS.readFile(
            `${RNFS.CachesDirectoryPath}/${fileName}`,
            'base64',
          ));

        let shareOptions = {
          title: appConstants.appName,

          url: isImage
            ? 'data:image/png;base64,' + base64
            : 'file://' + `${RNFS.CachesDirectoryPath}/${fileName}`,
          message: !!user?.displayName
            ? user?.displayName +
              ' shared a post on Greenlync.' +
              '  ' +
              referrelURL
            : referrelURL +
              '\n' +
              'Check this out on Greenlync, the App that everyone is talking about! See ya inside ðŸ”¥ ',
          // subject: url,
          type: isImage ? 'image/png' : 'video/mp4',
          subject:
            feed?.type ||
            'Check this out on Greenlync, the App that everyone is talking about! See ya inside ðŸ”¥ ',
        };
        console.log('shareOptions', shareOptions);

        Share.open(shareOptions)
          .then(async res => {
            debugLogs('share response', res);
            const isExist = await RNFS.exists(
              `${RNFS.CachesDirectoryPath}/${fileName}`,
            );
            if (isExist) {
              RNFS.unlink(`${RNFS.CachesDirectoryPath}/${fileName}`).then(
                () => {
                  console.log('deleted');
                },
              );
            }

            resolve(true);
          })
          .catch(async err => {
            debugLogs('share response error', err);
            const isExist = await RNFS.exists(
              `${RNFS.CachesDirectoryPath}/${fileName}`,
            );
            if (isExist) {
              RNFS.unlink(`${RNFS.CachesDirectoryPath}/${fileName}`).then(
                () => {
                  console.log('deleted');
                },
              );
            }

            resolve(false);
          });
      }
    });
  });
};

export const doctorsShare = (referrelURL: string, feed: feedDataModel) => {
  return new Promise(resolve => {
    let shareOptions = {
      title: appConstants.appName,
      url: referrelURL,
      message: feed.text || 'Join me on Greenlync and check this out!',
      // subject: url,
      subject: feed.type || 'Join me on Greenlync and check this out!',
    };

    Share.open(shareOptions)
      .then(res => {
        debugLogs('share response', res);
        resolve(true);
      })
      .catch(err => {
        debugLogs('share response error', err);

        resolve(false);
      });
  });
};

export async function openDirections(latitude, longitude, label) {
  const scheme = Platform.select({
    ios: 'maps:0,0?daddr=',
    android: 'geo:0,0?daddr=',
  });
  const latLng = `${latitude},${longitude}`;
  const url = Platform.select({
    ios: `${scheme}${label}@${latLng}`,
    android: 'http://maps.google.com/maps?daddr=' + latitude + ',' + longitude,
  });

  Linking.openURL(url);
}

// conflicted code original
export const showToast = (msg, duration = Toast.durations.SHORT) => {
  Toast.show(msg, {
    duration: duration,
    position: Toast.positions.BOTTOM,
    shadow: true,
    animation: true,
    hideOnPress: true,
    delay: 0,
  });
};

export const Emmiter = new EventEmitter();

// conflicted code incoming from Jay
export const getUnionList = (list: Array<any>) => {
  let uniqSetList = new Set(list.map(e => JSON.stringify(e)));
  let uniounList = Array.from(uniqSetList).map(e => JSON.parse(e));
  return uniounList;
};

// Jaydeep Code for Invite Friends
export const inviteFriends = () => {
  const linkParams = {
    $channel: 'referealSystem',
  };
  const customContent = new InviteContent();
  customContent.linkParams = linkParams;
  Invites.create(customContent).then(invite => {
    let shareOptions = {
      title: appConstants.appName,
      url: invite?.referralURL,
      message:
        'Check out Greenlync. the App that everyone is talking about. See ya inside!',
      subject: `Join me on GreenLync, the Social Hub for Everything Cannabis`,
    };

    Share.open(shareOptions)
      .then(res => {
        debugLogs('share response', res);
      })
      .catch(err => {
        debugLogs('share response error', err);
      });
  });
};

// Jay Code
export const getFeedListWithMediaAttachment = async (
  listOfFeeds: feedDataModel[] = [],
) => {
  const promises = await listOfFeeds.map(async (feed: feedDataModel) => {
    let theJointFeed = JSON.parse(JSON.stringify(feed));
    if (feed.mediaAttachments && feed.mediaAttachments.length > 0) {
      const mediaAttachmentList = [...feed.mediaAttachments];
      const feedMediaAttachmentsPromises = mediaAttachmentList.map(
        async mediaAttachment => {
          const mediaData: feedMediaModel = {};
          mediaData.imageUrl = mediaAttachment.getImageUrl();
          mediaData.videoUrl = mediaAttachment.getVideoUrl();
          let isPortrait = false;
          await Image.getSize(
            mediaAttachment.getImageUrl(),
            (width, height) => {
              isPortrait = width < height;
            },
          );
          mediaData.isImagePortrate = isPortrait;
          // debugLogs('mediaAttachment', mediaAttachment);
          return mediaData;
        },
      );
      const mediaResults = await Promise.all(feedMediaAttachmentsPromises);
      theJointFeed.mediaAttachments = [...mediaResults];
    }
    return theJointFeed;
  });

  return Promise.all(promises);
};

export const getHostnameFromRegex = url => {
  // run against regex
  const matches = !!url
    ? url?.match(/^https?\:\/\/([^\/?#]+)(?:[\/?#]|$)/i)
    : null;
  // extract hostname (will be null if no match is found)
  return !!matches && matches[1];
};

export const validateText = text => {
  if (
    text !== 'null' &&
    text !== 'NULL' &&
    text !== undefined &&
    text !== null &&
    text !== ''
  ) {
    return text;
  }
  return '';
};

export const getFileSize = async fileUri => {
  let fileInfo = await RNFS.stat(fileUri);
  const megabytes = fileInfo?.size / 1024 / 1024;
  return megabytes;
};

export const openSettings = () => {
  if (Platform.OS === 'ios') {
    Linking.openURL('app-settings:');
  } else {
    Linking.openSettings();
  }
};

export const onMentions = async (
  text,
  user,
  ACTIVITY_NAME,
  type,
  groupId = null,
  activityID = null,
) => {
  var mentionsRegex = new RegExp('@([a-zA-Z0-9_.]+)', 'gim');

  var matches = text.match(mentionsRegex);
  if (matches && matches.length) {
    matches = matches.map(function (match) {
      return match.slice(1);
    });

    const userName = _.uniq(matches);
    const id = await getIdByUsername(userName, user?.id);
    const notificationContent = new NotificationContent();
    notificationContent.templateName =
      type === 'c'
        ? 'commentMentions'
        : type === 'g'
        ? 'groupmentions'
        : 'mentions';
    const mentionID =
      type === 'c'
        ? {$activity_id: activityID}
        : type === 'g'
        ? {groupID: groupId}
        : null;
    const action = Action.create('mentions', mentionID);
    notificationContent.action = action;
    notificationContent.templatePlaceholders['SOMEONE'] = user?.displayName;
    notificationContent.templatePlaceholders['ACTIVITY_NAME'] = ACTIVITY_NAME;

    const target = SendNotificationTarget.usersWithIds(UserIdList.create(id));

    await Notifications.send(notificationContent, target);
  }
};

const getIdByUsername = (userNames, ids) => {
  return new Promise(resolve => {
    const apiCallData = [];
    _.map(userNames, i => {
      const query = UsersQuery.find(i);
      const pagingQuery = new PagingQuery(query);
      apiCallData.push(Communities.getUsers(pagingQuery));
    });
    Promise.all(apiCallData).then(resp => {
      const idlIst = _.map(resp, users => {
        if (users?.length !== 0) {
          const id = _.filter(
            users?.entries,
            ifd => !!ifd?.displayName?.toLowerCase(),
          );

          return id[0]?.userId;
        }
      });
      const filterIDs = _.filter(idlIst, i => !!i && i !== ids);
      resolve(filterIDs);
    });
  });
};

// export const isValidTextModeration = (text: string) => {
//   return new Promise(resolve => {
//     const formdata = new FormData();
//     formdata.append('text', text);
//     formdata.append('lang', 'en');
//     formdata.append('mode', 'standard');
//     formdata.append('api_user', '148694806');
//     formdata.append('api_secret', 'PDTRYswjBqi7754MBZM8');

//     var requestOptions = {
//       method: 'POST',
//       body: formdata,
//       redirect: 'follow',
//     };

//     fetch('https://api.sightengine.com/1.0/text/check.json', requestOptions)
//       .then(response => response.json())
//       .then(result => {
//         let isSafe = true;

//         if (result?.profanity.matches !== 0) {
//           _.map(result?.profanity.matches, i => {
//
//             if (i?.intensity === 'high') {
//               isSafe = false;
//             }
//           });
//         }
//         resolve(isSafe);
//       });
//   });
// };

export const SpaceWordModeration = text => {
  const spaceWords = _.filter(data, i => i.indexOf(' ') >= 0);
  const mainString = text.toLowerCase();
  let flag = true;
  _.map(spaceWords, i => {
    if (_.includes(mainString, i.toLowerCase()) && flag) {
      flag = false;
      return flag;
    }
  });
  return flag;
};

export const ManualModerationTool = (text: string) => {
  const mainString = text.toLowerCase();
  let flag = true;

  const sPilledString = mainString.split(' ');

  _.map(data, i => {
    if (_.includes(sPilledString, i.toLowerCase()) && flag) {
      flag = false;

      return flag;
    }
  });

  return flag;
};

function countOcurrences(str, value) {
  var regExp = new RegExp(value, 'gi');
  return (str.match(regExp) || []).length;
}

const replaceText = (text: string, searchText) => {
  const charLength = searchText?.length;
  let stringStart = '';
  for (let it = 0; it < charLength; it++) {
    stringStart += '*';
  }

  return text.replace(searchText.toLowerCase(), stringStart);
};

export const locationSpaceWordModeration = (text: string) => {
  const spaceWords = _.filter(dataSet2, i => {
    if (typeof i === 'string') {
      return i?.indexOf(' ') >= 0;
    }
  });
  let mainString = text;
  let newString = text;
  _.map(spaceWords, (i: String) => {
    if (ignoreCase.equals(mainString, i)) {
      var count = countOcurrences(mainString, i.toLowerCase());
      for (let index = 1; index <= count; index++) {
        mainString = replaceText(mainString, i);
      }

      const charLength = i.length;
      let stringStart = '';
      for (let it = 0; it < charLength; it++) {
        stringStart += '*';
      }

      newString = mainString.replace(i.toLowerCase(), stringStart);
    }
  });

  return newString;
};

const returnNumberModeration = (text: string) => {
  let NumberText = text;
  const onlyNumber = _.map(dataSet2, i => {
    if (!isNaN(Number(i))) {
      return i.toString();
    } else {
      return i;
    }
  });

  _.map(onlyNumber, (i: String) => {
    if (_.includes(NumberText, i)) {
      var count = countOcurrences(NumberText, i.toLowerCase());
      for (let index = 1; index <= count; index++) {
        NumberText = replaceText(NumberText, i);
      }

      const charLength = i.length;
      let stringStart = '';
      for (let it = 0; it < charLength; it++) {
        stringStart += '*';
      }

      NumberText = NumberText.replace(i.toLowerCase(), stringStart);
    }
  });

  return NumberText;
};

export const locationModeration = (text: string) => {
  const mainString = text;
  let sPilledString = mainString.split(/[.\-_  */+!~Â£$&,]/);
  let joindString = sPilledString.join(' ');

  const replacedString = joindString.replace('(?<=\\d) +(?=\\d)', '');

  const removewhiteSPace = replacedString.replace(/^\s+|\s+$|\s+(?=\s)/g, '');

  sPilledString = returnNumberModeration(removewhiteSPace).split(' ');

  const dataSet3 = _.map(dataSet2, i => {
    if (typeof i === 'number') {
      return i.toString();
    } else {
      return i;
    }
  });

  _.map(dataSet3, i => {
    if (ignoreCase.equals(sPilledString, i)) {
      const findIndex = _.findIndex(sPilledString, str => {
        return ignoreCase.equals(str, i);
      });
      const charLength = i.length;
      let stringStart = '';
      for (let it = 0; it < charLength; it++) {
        stringStart += '*';
      }
      sPilledString[findIndex] = stringStart;
    }
  });
  return sPilledString.join(' ');
};

export const timeFetcher = date => {
  if (typeof date !== 'object') {
    date = new Date(date);
  }

  var seconds = Math.floor((new Date() - date) / 1000);
  var intervalType;

  var interval = Math.floor(seconds / 31536000);
  if (interval >= 1) {
    intervalType = 'y';
  } else {
    interval = Math.floor(seconds / 2592000);
    if (interval >= 1) {
      intervalType = 'm';
    } else {
      interval = Math.floor(seconds / 86400);
      if (interval >= 1) {
        intervalType = 'd';
      } else {
        interval = Math.floor(seconds / 3600);
        if (interval >= 1) {
          intervalType = 'h';
        } else {
          interval = Math.floor(seconds / 60);
          if (interval >= 1) {
            intervalType = 'm';
          } else {
            interval = seconds;
            intervalType = 'now';
          }
        }
      }
    }
  }

  if (interval > 1 || interval === 0) {
    intervalType += '';
  }

  if (intervalType === 'now') {
    return intervalType;
  } else {
    return interval + '' + intervalType;
  }
};

export const isCloseToBottom = ({
  layoutMeasurement,
  contentOffset,
  contentSize,
}) => {
  const paddingToBottom = 20;
  return (
    layoutMeasurement.height + contentOffset.y >=
    contentSize.height - paddingToBottom
  );
};

const getAccessTokens = async () => {
  return new Promise(async resove => {
    const user = await GetSocial.getCurrentUser();

    axios
      .post('https://api.getsocial.im/v1/authenticate/user', '', {
        params: {
          app_id: EndPoints.getSocialId,
          identity_type: 'greenlync',
          value: user?.identities?.greenlync,
          token: EndPoints.getSocialSecret,
        },
        headers: {
          accept: 'application/json',
        },
      })
      .then(resp => {
        resove(resp?.data);
      })
      .catch(error => {
        console.log('error', error);
      });
  });
};

export const deleteGetsocialUser = async () => {
  const getSocialAuth = await getAccessTokens();

  const users = [
    {
      provider: 'greenlync',
      user_id: getSocialAuth?.user?.auth_identities?.greenlync,
    },
  ];
  const payload = {
    app_id: EndPoints.getSocialId,
    users: users,
  };
  const headers = {
    'X-GetSocial-Access-Token': getSocialAuth?.access_token,
    'X-GetSocial-API-Key': EndPoints.getScoialAPIKey,
  };

  axios
    .delete('https://api.getsocial.im/v1/users', {
      data: payload,
      headers: headers,
    })
    .then(resp => {
      if (resp.status === 200) {
        showToast('Your account has been deleted!');
      }
    })
    .catch(() => {
      showToast('Failed to delete, please email support');
      return;
    });
};

const capFirst = (name: string) => {
  return name?.charAt(0)?.toUpperCase() + name?.slice(1);
};

const getRandomInt = (min, max) => {
  return Math.floor(Math.random() * (max - min)) + min;
};

export const generateRandomName = () => {
  var name1 = [
    'abandoned',
    'able',
    'absolute',
    'adorable',
    'adventurous',
    'academic',
    'acceptable',
    'acclaimed',
    'accomplished',
    'accurate',
    'aching',
    'acidic',
    'acrobatic',
    'active',
    'actual',
    'adept',
    'admirable',
    'admired',
    'adolescent',
    'adorable',
    'adored',
    'advanced',
    'afraid',
    'affectionate',
    'aged',
    'aggravating',
    'aggressive',
    'agile',
    'agitated',
    'agonizing',
    'agreeable',
    'ajar',
    'alarmed',
    'alarming',
    'alert',
    'alienated',
    'alive',
    'all',
    'altruistic',
    'amazing',
    'ambitious',
    'ample',
    'amused',
    'amusing',
    'anchored',
    'ancient',
    'angelic',
    'angry',
    'anguished',
    'animated',
    'annual',
    'another',
    'antique',
    'anxious',
    'any',
    'apprehensive',
    'appropriate',
    'apt',
    'arctic',
    'arid',
    'aromatic',
    'artistic',
    'ashamed',
    'assured',
    'astonishing',
    'athletic',
    'attached',
    'attentive',
    'attractive',
    'austere',
    'authentic',
    'authorized',
    'automatic',
    'avaricious',
    'average',
    'aware',
    'awesome',
    'awful',
    'awkward',
    'babyish',
    'bad',
    'back',
    'baggy',
    'bare',
    'barren',
    'basic',
    'beautiful',
    'belated',
    'beloved',
    'beneficial',
    'better',
    'best',
    'bewitched',
    'big',
    'big-hearted',
    'biodegradable',
    'bite-sized',
    'bitter',
    'black',
    'black-and-white',
    'bland',
    'blank',
    'blaring',
    'bleak',
    'blind',
    'blissful',
    'blond',
    'blue',
    'blushing',
    'bogus',
    'boiling',
    'bold',
    'bony',
    'boring',
    'bossy',
    'both',
    'bouncy',
    'bountiful',
    'bowed',
    'brave',
    'breakable',
    'brief',
    'bright',
    'brilliant',
    'brisk',
    'broken',
    'bronze',
    'brown',
    'bruised',
    'bubbly',
    'bulky',
    'bumpy',
    'buoyant',
    'burdensome',
    'burly',
    'bustling',
    'busy',
    'buttery',
    'buzzing',
    'calculating',
    'calm',
    'candid',
    'canine',
    'capital',
    'carefree',
    'careful',
    'careless',
    'caring',
    'cautious',
    'cavernous',
    'celebrated',
    'charming',
    'cheap',
    'cheerful',
    'cheery',
    'chief',
    'chilly',
    'chubby',
    'circular',
    'classic',
    'clean',
    'clear',
    'clear-cut',
    'clever',
    'close',
    'closed',
    'cloudy',
    'clueless',
    'clumsy',
    'cluttered',
    'coarse',
    'cold',
    'colorful',
    'colorless',
    'colossal',
    'comfortable',
    'common',
    'compassionate',
    'competent',
    'complete',
    'complex',
    'complicated',
    'composed',
    'concerned',
    'concrete',
    'confused',
    'conscious',
    'considerate',
    'constant',
    'content',
    'conventional',
    'cooked',
    'cool',
    'cooperative',
    'coordinated',
    'corny',
    'corrupt',
    'costly',
    'courageous',
    'courteous',
    'crafty',
    'crazy',
    'creamy',
    'creative',
    'creepy',
    'criminal',
    'crisp',
    'critical',
    'crooked',
    'crowded',
    'cruel',
    'crushing',
    'cuddly',
    'cultivated',
    'cultured',
    'cumbersome',
    'curly',
    'curvy',
    'cute',
    'cylindrical',
    'damaged',
    'damp',
    'dangerous',
    'dapper',
    'daring',
    'darling',
    'dark',
    'dazzling',
    'dead',
    'deadly',
    'deafening',
    'dear',
    'dearest',
    'decent',
    'decimal',
    'decisive',
    'deep',
    'defenseless',
    'defensive',
    'defiant',
    'deficient',
    'definite',
    'definitive',
    'delayed',
    'delectable',
    'delicious',
    'delightful',
    'delirious',
    'demanding',
    'dense',
    'dental',
    'dependable',
    'dependent',
    'descriptive',
    'deserted',
    'detailed',
    'determined',
    'devoted',
    'different',
    'difficult',
    'digital',
    'diligent',
    'dim',
    'dimpled',
    'dimwitted',
    'direct',
    'disastrous',
    'discrete',
    'disfigured',
    'disgusting',
    'disloyal',
    'dismal',
    'distant',
    'downright',
    'dreary',
    'dirty',
    'disguised',
    'dishonest',
    'dismal',
    'distant',
    'distinct',
    'distorted',
    'dizzy',
    'dopey',
    'doting',
    'double',
    'downright',
    'drab',
    'drafty',
    'dramatic',
    'dreary',
    'droopy',
    'dry',
    'dual',
    'dull',
    'dutiful',
    'each',
    'eager',
    'earnest',
    'early',
    'easy',
    'easy-going',
    'ecstatic',
    'edible',
    'educated',
    'elaborate',
    'elastic',
    'elated',
    'elderly',
    'electric',
    'elegant',
    'elementary',
    'elliptical',
    'embarrassed',
    'embellished',
    'eminent',
    'emotional',
    'empty',
    'enchanted',
    'enchanting',
    'energetic',
    'enlightened',
    'enormous',
    'enraged',
    'entire',
    'envious',
    'equal',
    'equatorial',
    'essential',
    'esteemed',
    'ethical',
    'euphoric',
    'even',
    'evergreen',
    'everlasting',
    'every',
    'evil',
    'exalted',
    'excellent',
    'exemplary',
    'exhausted',
    'excitable',
    'excited',
    'exciting',
    'exotic',
    'expensive',
    'experienced',
    'expert',
    'extraneous',
    'extroverted',
    'extra-large',
    'extra-small',
    'fabulous',
    'failing',
    'faint',
    'fair',
    'faithful',
    'fake',
    'false',
    'familiar',
    'famous',
    'fancy',
    'fantastic',
    'far',
    'faraway',
    'far-flung',
    'far-off',
    'fast',
    'fat',
    'fatal',
    'fatherly',
    'favorable',
    'favorite',
    'fearful',
    'fearless',
    'feisty',
    'feline',
    'female',
    'feminine',
    'few',
    'fickle',
    'filthy',
    'fine',
    'finished',
    'firm',
    'first',
    'firsthand',
    'fitting',
    'fixed',
    'flaky',
    'flamboyant',
    'flashy',
    'flat',
    'flawed',
    'flawless',
    'flickering',
    'flimsy',
    'flippant',
    'flowery',
    'fluffy',
    'fluid',
    'flustered',
    'focused',
    'fond',
    'foolhardy',
    'foolish',
    'forceful',
    'forked',
    'formal',
    'forsaken',
    'forthright',
    'fortunate',
    'fragrant',
    'frail',
    'frank',
    'frayed',
    'free',
    'French',
    'fresh',
    'frequent',
    'friendly',
    'frightened',
    'frightening',
    'frigid',
    'frilly',
    'frizzy',
    'frivolous',
    'front',
    'frosty',
    'frozen',
    'frugal',
    'fruitful',
    'full',
    'fumbling',
    'functional',
    'funny',
    'fussy',
    'fuzzy',
    'gargantuan',
    'gaseous',
    'general',
    'generous',
    'gentle',
    'genuine',
    'giant',
    'giddy',
    'gigantic',
    'gifted',
    'giving',
    'glamorous',
    'glaring',
    'glass',
    'gleaming',
    'gleeful',
    'glistening',
    'glittering',
    'gloomy',
    'glorious',
    'glossy',
    'glum',
    'golden',
    'good',
    'good-natured',
    'gorgeous',
    'graceful',
    'gracious',
    'grand',
    'grandiose',
    'granular',
    'grateful',
    'grave',
    'gray',
    'great',
    'greedy',
    'green',
    'gregarious',
    'grim',
    'grimy',
    'gripping',
    'grizzled',
    'gross',
    'grotesque',
    'grouchy',
    'grounded',
    'growing',
    'growling',
    'grown',
    'grubby',
    'gruesome',
    'grumpy',
    'guilty',
    'gullible',
    'gummy',
    'hairy',
    'half',
    'handmade',
    'handsome',
    'handy',
    'happy',
    'happy-go-lucky',
    'hard',
    'hard-to-find',
    'harmful',
    'harmless',
    'harmonious',
    'harsh',
    'hasty',
    'hateful',
    'haunting',
    'healthy',
    'heartfelt',
    'hearty',
    'heavenly',
    'heavy',
    'hefty',
    'helpful',
    'helpless',
    'hidden',
    'hideous',
    'high',
    'high-level',
    'hilarious',
    'hoarse',
    'hollow',
    'homely',
    'honest',
    'honorable',
    'honored',
    'hopeful',
    'horrible',
    'hospitable',
    'hot',
    'huge',
    'humble',
    'humiliating',
    'humming',
    'humongous',
    'hungry',
    'hurtful',
    'husky',
    'icky',
    'icy',
    'ideal',
    'idealistic',
    'identical',
    'idle',
    'idiotic',
    'idolized',
    'ignorant',
    'ill',
    'illegal',
    'ill-fated',
    'ill-informed',
    'illiterate',
    'illustrious',
    'imaginary',
    'imaginative',
    'immaculate',
    'immaterial',
    'immediate',
    'immense',
    'impassioned',
    'impeccable',
    'impartial',
    'imperfect',
    'imperturbable',
    'impish',
    'impolite',
    'important',
    'impossible',
    'impractical',
    'impressionable',
    'impressive',
    'improbable',
    'impure',
    'inborn',
    'incomparable',
    'incompatible',
    'incomplete',
    'inconsequential',
    'incredible',
    'indelible',
    'inexperienced',
    'indolent',
    'infamous',
    'infantile',
    'infatuated',
    'inferior',
    'infinite',
    'informal',
    'innocent',
    'insecure',
    'insidious',
    'insignificant',
    'insistent',
    'instructive',
    'insubstantial',
    'intelligent',
    'intent',
    'intentional',
    'interesting',
    'internal',
    'international',
    'intrepid',
    'ironclad',
    'irresponsible',
    'irritating',
    'itchy',
    'jaded',
    'jagged',
    'jam-packed',
    'jaunty',
    'jealous',
    'jittery',
    'joint',
    'jolly',
    'jovial',
    'joyful',
    'joyous',
    'jubilant',
    'judicious',
    'juicy',
    'jumbo',
    'junior',
    'jumpy',
    'juvenile',
    'kaleidoscopic',
    'keen',
    'key',
    'kind',
    'kindhearted',
    'kindly',
    'klutzy',
    'knobby',
    'knotty',
    'knowledgeable',
    'knowing',
    'known',
    'kooky',
    'kosher',
    'lame',
    'lanky',
    'large',
    'last',
    'lasting',
    'late',
    'lavish',
    'lawful',
    'lazy',
    'leading',
    'lean',
    'leafy',
    'left',
    'legal',
    'legitimate',
    'light',
    'lighthearted',
    'likable',
    'likely',
    'limited',
    'limp',
    'limping',
    'linear',
    'lined',
    'liquid',
    'little',
    'live',
    'lively',
    'livid',
    'loathsome',
    'lone',
    'lonely',
    'long',
    'long-term',
    'loose',
    'lopsided',
    'lost',
    'loud',
    'lovable',
    'lovely',
    'loving',
    'low',
    'loyal',
    'lucky',
    'lumbering',
    'luminous',
    'lumpy',
    'lustrous',
    'luxurious',
    'mad',
    'made-up',
    'magnificent',
    'majestic',
    'major',
    'male',
    'mammoth',
    'married',
    'marvelous',
    'masculine',
    'massive',
    'mature',
    'meager',
    'mealy',
    'mean',
    'measly',
    'meaty',
    'medical',
    'mediocre',
    'medium',
    'meek',
    'mellow',
    'melodic',
    'memorable',
    'menacing',
    'merry',
    'messy',
    'metallic',
    'mild',
    'milky',
    'mindless',
    'miniature',
    'minor',
    'minty',
    'miserable',
    'miserly',
    'misguided',
    'misty',
    'mixed',
    'modern',
    'modest',
    'moist',
    'monstrous',
    'monthly',
    'monumental',
    'moral',
    'mortified',
    'motherly',
    'motionless',
    'mountainous',
    'muddy',
    'muffled',
    'multicolored',
    'mundane',
    'murky',
    'mushy',
    'musty',
    'muted',
    'mysterious',
    'naive',
    'narrow',
    'nasty',
    'natural',
    'naughty',
    'nautical',
    'near',
    'neat',
    'necessary',
    'needy',
    'negative',
    'neglected',
    'negligible',
    'neighboring',
    'nervous',
    'new',
    'next',
    'nice',
    'nifty',
    'nimble',
    'nippy',
    'nocturnal',
    'noisy',
    'nonstop',
    'normal',
    'notable',
    'noted',
    'noteworthy',
    'novel',
    'noxious',
    'numb',
    'nutritious',
    'nutty',
    'obedient',
    'obese',
    'oblong',
    'oily',
    'oblong',
    'obvious',
    'occasional',
    'odd',
    'oddball',
    'offbeat',
    'offensive',
    'official',
    'old',
    'old-fashioned',
    'only',
    'open',
    'optimal',
    'optimistic',
    'opulent',
    'orange',
    'orderly',
    'organic',
    'ornate',
    'ornery',
    'ordinary',
    'original',
    'other',
    'our',
    'outlying',
    'outgoing',
    'outlandish',
    'outrageous',
    'outstanding',
    'oval',
    'overcooked',
    'overdue',
    'overjoyed',
    'overlooked',
    'palatable',
    'pale',
    'paltry',
    'parallel',
    'parched',
    'partial',
    'passionate',
    'past',
    'pastel',
    'peaceful',
    'peppery',
    'perfect',
    'perfumed',
    'periodic',
    'perky',
    'personal',
    'pertinent',
    'pesky',
    'pessimistic',
    'petty',
    'phony',
    'physical',
    'piercing',
    'pink',
    'pitiful',
    'plain',
    'plaintive',
    'plastic',
    'playful',
    'pleasant',
    'pleased',
    'pleasing',
    'plump',
    'plush',
    'polished',
    'polite',
    'political',
    'pointed',
    'pointless',
    'poised',
    'poor',
    'popular',
    'portly',
    'posh',
    'positive',
    'possible',
    'potable',
    'powerful',
    'powerless',
    'practical',
    'precious',
    'present',
    'prestigious',
    'pretty',
    'precious',
    'previous',
    'pricey',
    'prickly',
    'primary',
    'prime',
    'pristine',
    'private',
    'prize',
    'probable',
    'productive',
    'profitable',
    'profuse',
    'proper',
    'proud',
    'prudent',
    'punctual',
    'pungent',
    'puny',
    'pure',
    'purple',
    'pushy',
    'putrid',
    'puzzled',
    'puzzling',
    'quaint',
    'qualified',
    'quarrelsome',
    'quarterly',
    'queasy',
    'querulous',
    'questionable',
    'quick',
    'quick-witted',
    'quiet',
    'quintessential',
    'quirky',
    'quixotic',
    'quizzical',
    'radiant',
    'ragged',
    'rapid',
    'rare',
    'rash',
    'raw',
    'recent',
    'reckless',
    'rectangular',
    'ready',
    'real',
    'realistic',
    'reasonable',
    'red',
    'reflecting',
    'regal',
    'regular',
    'reliable',
    'relieved',
    'remarkable',
    'remorseful',
    'remote',
    'repentant',
    'required',
    'respectful',
    'responsible',
    'repulsive',
    'revolving',
    'rewarding',
    'rich',
    'rigid',
    'right',
    'ringed',
    'ripe',
    'roasted',
    'robust',
    'rosy',
    'rotating',
    'rotten',
    'rough',
    'round',
    'rowdy',
    'royal',
    'rubbery',
    'rundown',
    'ruddy',
    'rude',
    'runny',
    'rural',
    'rusty',
    'sad',
    'safe',
    'salty',
    'same',
    'sandy',
    'sane',
    'sarcastic',
    'sardonic',
    'satisfied',
    'scaly',
    'scarce',
    'scared',
    'scary',
    'scented',
    'scholarly',
    'scientific',
    'scornful',
    'scratchy',
    'scrawny',
    'second',
    'secondary',
    'second-hand',
    'secret',
    'self-assured',
    'self-reliant',
    'selfish',
    'sentimental',
    'separate',
    'serene',
    'serious',
    'serpentine',
    'several',
    'severe',
    'shabby',
    'shadowy',
    'shady',
    'shallow',
    'shameful',
    'shameless',
    'sharp',
    'shimmering',
    'shiny',
    'shocked',
    'shocking',
    'shoddy',
    'short',
    'short-term',
    'showy',
    'shrill',
    'shy',
    'sick',
    'silent',
    'silky',
    'silly',
    'silver',
    'similar',
    'simple',
    'simplistic',
    'sinful',
    'single',
    'sizzling',
    'skeletal',
    'skinny',
    'sleepy',
    'slight',
    'slim',
    'slimy',
    'slippery',
    'slow',
    'slushy',
    'small',
    'smart',
    'smoggy',
    'smooth',
    'smug',
    'snappy',
    'snarling',
    'sneaky',
    'sniveling',
    'snoopy',
    'sociable',
    'soft',
    'soggy',
    'solid',
    'somber',
    'some',
    'spherical',
    'sophisticated',
    'sore',
    'sorrowful',
    'soulful',
    'soupy',
    'sour',
    'Spanish',
    'sparkling',
    'sparse',
    'specific',
    'spectacular',
    'speedy',
    'spicy',
    'spiffy',
    'spirited',
    'spiteful',
    'splendid',
    'spotless',
    'spotted',
    'spry',
    'square',
    'squeaky',
    'squiggly',
    'stable',
    'staid',
    'stained',
    'stale',
    'standard',
    'starchy',
    'stark',
    'starry',
    'steep',
    'sticky',
    'stiff',
    'stimulating',
    'stingy',
    'stormy',
    'straight',
    'strange',
    'steel',
    'strict',
    'strident',
    'striking',
    'striped',
    'strong',
    'studious',
    'stunning',
    'stupendous',
    'stupid',
    'sturdy',
    'stylish',
    'subdued',
    'submissive',
    'substantial',
    'subtle',
    'suburban',
    'sudden',
    'sugary',
    'sunny',
    'super',
    'superb',
    'superficial',
    'superior',
    'supportive',
    'sure-footed',
    'surprised',
    'suspicious',
    'svelte',
    'sweaty',
    'sweet',
    'sweltering',
    'swift',
    'sympathetic',
    'tall',
    'talkative',
    'tame',
    'tan',
    'tangible',
    'tart',
    'tasty',
    'tattered',
    'taut',
    'tedious',
    'teeming',
    'tempting',
    'tender',
    'tense',
    'tepid',
    'terrible',
    'terrific',
    'testy',
    'thankful',
    'that',
    'these',
    'thick',
    'thin',
    'third',
    'thirsty',
    'this',
    'thorough',
    'thorny',
    'those',
    'thoughtful',
    'threadbare',
    'thrifty',
    'thunderous',
    'tidy',
    'tight',
    'timely',
    'tinted',
    'tiny',
    'tired',
    'torn',
    'total',
    'tough',
    'traumatic',
    'treasured',
    'tremendous',
    'tragic',
    'trained',
    'tremendous',
    'triangular',
    'tricky',
    'trifling',
    'trim',
    'trivial',
    'troubled',
    'true',
    'trusting',
    'trustworthy',
    'trusty',
    'truthful',
    'tubby',
    'turbulent',
    'twin',
    'ugly',
    'ultimate',
    'unacceptable',
    'unaware',
    'uncomfortable',
    'uncommon',
    'unconscious',
    'understated',
    'unequaled',
    'uneven',
    'unfinished',
    'unfit',
    'unfolded',
    'unfortunate',
    'unhappy',
    'unhealthy',
    'uniform',
    'unimportant',
    'unique',
    'united',
    'unkempt',
    'unknown',
    'unlawful',
    'unlined',
    'unlucky',
    'unnatural',
    'unpleasant',
    'unrealistic',
    'unripe',
    'unruly',
    'unselfish',
    'unsightly',
    'unsteady',
    'unsung',
    'untidy',
    'untimely',
    'untried',
    'untrue',
    'unused',
    'unusual',
    'unwelcome',
    'unwieldy',
    'unwilling',
    'unwitting',
    'unwritten',
    'upbeat',
    'upright',
    'upset',
    'urban',
    'usable',
    'used',
    'useful',
    'useless',
    'utilized',
    'utter',
    'vacant',
    'vague',
    'vain',
    'valid',
    'valuable',
    'vapid',
    'variable',
    'vast',
    'velvety',
    'venerated',
    'vengeful',
    'verifiable',
    'vibrant',
    'vicious',
    'victorious',
    'vigilant',
    'vigorous',
    'villainous',
    'violet',
    'violent',
    'virtual',
    'virtuous',
    'visible',
    'vital',
    'vivacious',
    'vivid',
    'voluminous',
    'wan',
    'warlike',
    'warm',
    'warmhearted',
    'warped',
    'wary',
    'wasteful',
    'watchful',
    'waterlogged',
    'watery',
    'wavy',
    'wealthy',
    'weak',
    'weary',
    'webbed',
    'wee',
    'weekly',
    'weepy',
    'weighty',
    'weird',
    'welcome',
    'well-documented',
    'well-groomed',
    'well-informed',
    'well-lit',
    'well-made',
    'well-off',
    'well-to-do',
    'well-worn',
    'wet',
    'which',
    'whimsical',
    'whirlwind',
    'whispered',
    'white',
    'whole',
    'whopping',
    'wicked',
    'wide',
    'wide-eyed',
    'wiggly',
    'wild',
    'willing',
    'wilted',
    'winding',
    'windy',
    'winged',
    'wiry',
    'wise',
    'witty',
    'wobbly',
    'woeful',
    'wonderful',
    'wooden',
    'woozy',
    'wordy',
    'worldly',
    'worn',
    'worried',
    'worrisome',
    'worse',
    'worst',
    'worthless',
    'worthwhile',
    'worthy',
    'wrathful',
    'wretched',
    'writhing',
    'wrong',
    'wry',
    'yawning',
    'yearly',
    'yellow',
    'yellowish',
    'young',
    'youthful',
    'yummy',
    'zany',
    'zealous',
    'zesty',
    'zigzag',
    'rocky',
  ];

  var name2 = [
    'people',
    'history',
    'way',
    'art',
    'world',
    'information',
    'map',
    'family',
    'government',
    'health',
    'system',
    'computer',
    'meat',
    'year',
    'thanks',
    'music',
    'person',
    'reading',
    'method',
    'data',
    'food',
    'understanding',
    'theory',
    'law',
    'bird',
    'literature',
    'problem',
    'software',
    'control',
    'knowledge',
    'power',
    'ability',
    'economics',
    'love',
    'internet',
    'television',
    'science',
    'library',
    'nature',
    'fact',
    'product',
    'idea',
    'temperature',
    'investment',
    'area',
    'society',
    'activity',
    'story',
    'industry',
    'media',
    'thing',
    'oven',
    'community',
    'definition',
    'safety',
    'quality',
    'development',
    'language',
    'management',
    'player',
    'variety',
    'video',
    'week',
    'security',
    'country',
    'exam',
    'movie',
    'organization',
    'equipment',
    'physics',
    'analysis',
    'policy',
    'series',
    'thought',
    'basis',
    'boyfriend',
    'direction',
    'strategy',
    'technology',
    'army',
    'camera',
    'freedom',
    'paper',
    'environment',
    'child',
    'instance',
    'month',
    'truth',
    'marketing',
    'university',
    'writing',
    'article',
    'department',
    'difference',
    'goal',
    'news',
    'audience',
    'fishing',
    'growth',
    'income',
    'marriage',
    'user',
    'combination',
    'failure',
    'meaning',
    'medicine',
    'philosophy',
    'teacher',
    'communication',
    'night',
    'chemistry',
    'disease',
    'disk',
    'energy',
    'nation',
    'road',
    'role',
    'soup',
    'advertising',
    'location',
    'success',
    'addition',
    'apartment',
    'education',
    'math',
    'moment',
    'painting',
    'politics',
    'attention',
    'decision',
    'event',
    'property',
    'shopping',
    'student',
    'wood',
    'competition',
    'distribution',
    'entertainment',
    'office',
    'population',
    'president',
    'unit',
    'category',
    'cigarette',
    'context',
    'introduction',
    'opportunity',
    'performance',
    'driver',
    'flight',
    'length',
    'magazine',
    'newspaper',
    'relationship',
    'teaching',
    'cell',
    'dealer',
    'debate',
    'finding',
    'lake',
    'member',
    'message',
    'phone',
    'scene',
    'appearance',
    'association',
    'concept',
    'customer',
    'death',
    'discussion',
    'housing',
    'inflation',
    'insurance',
    'mood',
    'woman',
    'advice',
    'blood',
    'effort',
    'expression',
    'importance',
    'opinion',
    'payment',
    'reality',
    'responsibility',
    'situation',
    'skill',
    'statement',
    'wealth',
    'application',
    'city',
    'county',
    'depth',
    'estate',
    'foundation',
    'grandmother',
    'heart',
    'perspective',
    'photo',
    'recipe',
    'studio',
    'topic',
    'collection',
    'depression',
    'imagination',
    'passion',
    'percentage',
    'resource',
    'setting',
    'ad',
    'agency',
    'college',
    'connection',
    'criticism',
    'debt',
    'description',
    'memory',
    'patience',
    'secretary',
    'solution',
    'administration',
    'aspect',
    'attitude',
    'director',
    'personality',
    'psychology',
    'recommendation',
    'response',
    'selection',
    'storage',
    'version',
    'alcohol',
    'argument',
    'complaint',
    'contract',
    'emphasis',
    'highway',
    'loss',
    'membership',
    'possession',
    'preparation',
    'steak',
    'union',
    'agreement',
    'cancer',
    'currency',
    'employment',
    'engineering',
    'entry',
    'interaction',
    'limit',
    'mixture',
    'preference',
    'region',
    'republic',
    'seat',
    'tradition',
    'virus',
    'actor',
    'classroom',
    'delivery',
    'device',
    'difficulty',
    'drama',
    'election',
    'engine',
    'football',
    'guidance',
    'hotel',
    'match',
    'owner',
    'priority',
    'protection',
    'suggestion',
    'tension',
    'variation',
    'anxiety',
    'atmosphere',
    'awareness',
    'bread',
    'climate',
    'comparison',
    'confusion',
    'construction',
    'elevator',
    'emotion',
    'employee',
    'employer',
    'guest',
    'height',
    'leadership',
    'mall',
    'manager',
    'operation',
    'recording',
    'respect',
    'sample',
    'transportation',
    'boring',
    'charity',
    'cousin',
    'disaster',
    'editor',
    'efficiency',
    'excitement',
    'extent',
    'feedback',
    'guitar',
    'homework',
    'leader',
    'mom',
    'outcome',
    'permission',
    'presentation',
    'promotion',
    'reflection',
    'refrigerator',
    'resolution',
    'revenue',
    'session',
    'singer',
    'tennis',
    'basket',
    'bonus',
    'cabinet',
    'childhood',
    'church',
    'clothes',
    'coffee',
    'dinner',
    'drawing',
    'hair',
    'hearing',
    'initiative',
    'judgment',
    'lab',
    'measurement',
    'mode',
    'mud',
    'orange',
    'poetry',
    'police',
    'possibility',
    'procedure',
    'queen',
    'ratio',
    'relation',
    'restaurant',
    'satisfaction',
    'sector',
    'signature',
    'significance',
    'song',
    'tooth',
    'town',
    'vehicle',
    'volume',
    'wife',
    'accident',
    'airport',
    'appointment',
    'arrival',
    'assumption',
    'baseball',
    'chapter',
    'committee',
    'conversation',
    'database',
    'enthusiasm',
    'error',
    'explanation',
    'farmer',
    'gate',
    'girl',
    'hall',
    'historian',
    'hospital',
    'injury',
    'instruction',
    'maintenance',
    'manufacturer',
    'meal',
    'perception',
    'pie',
    'poem',
    'presence',
    'proposal',
    'reception',
    'replacement',
    'revolution',
    'river',
    'son',
    'speech',
    'tea',
    'village',
    'warning',
    'winner',
    'worker',
    'writer',
    'assistance',
    'breath',
    'buyer',
    'chest',
    'chocolate',
    'conclusion',
    'contribution',
    'cookie',
    'courage',
    'desk',
    'drawer',
    'establishment',
    'examination',
    'garbage',
    'grocery',
    'honey',
    'impression',
    'improvement',
    'independence',
    'insect',
    'inspection',
    'inspector',
    'king',
    'ladder',
    'menu',
    'penalty',
    'piano',
    'potato',
    'profession',
    'professor',
    'quantity',
    'reaction',
    'requirement',
    'salad',
    'sister',
    'supermarket',
    'tongue',
    'weakness',
    'wedding',
    'affair',
    'ambition',
    'analyst',
    'apple',
    'assignment',
    'assistant',
    'bathroom',
    'bedroom',
    'beer',
    'birthday',
    'celebration',
    'championship',
    'cheek',
    'client',
    'consequence',
    'departure',
    'diamond',
    'dirt',
    'ear',
    'fortune',
    'friendship',
    'funeral',
    'gene',
    'girlfriend',
    'hat',
    'indication',
    'intention',
    'lady',
    'midnight',
    'negotiation',
    'obligation',
    'passenger',
    'pizza',
    'platform',
    'poet',
    'pollution',
    'recognition',
    'reputation',
    'shirt',
    'speaker',
    'stranger',
    'surgery',
    'sympathy',
    'tale',
    'throat',
    'trainer',
    'uncle',
    'youth',
    'time',
    'work',
    'film',
    'water',
    'money',
    'example',
    'while',
    'business',
    'study',
    'game',
    'life',
    'form',
    'air',
    'day',
    'place',
    'number',
    'part',
    'field',
    'fish',
    'back',
    'process',
    'heat',
    'hand',
    'experience',
    'job',
    'book',
    'end',
    'point',
    'type',
    'home',
    'economy',
    'value',
    'body',
    'market',
    'guide',
    'interest',
    'state',
    'radio',
    'course',
    'company',
    'price',
    'size',
    'card',
    'list',
    'mind',
    'trade',
    'line',
    'care',
    'group',
    'risk',
    'word',
    'fat',
    'force',
    'key',
    'light',
    'training',
    'name',
    'school',
    'top',
    'amount',
    'level',
    'order',
    'practice',
    'research',
    'sense',
    'service',
    'piece',
    'web',
    'boss',
    'sport',
    'fun',
    'house',
    'page',
    'term',
    'test',
    'answer',
    'sound',
    'focus',
    'matter',
    'kind',
    'soil',
    'board',
    'oil',
    'picture',
    'access',
    'garden',
    'range',
    'rate',
    'reason',
    'future',
    'site',
    'demand',
    'exercise',
    'image',
    'case',
    'cause',
    'coast',
    'action',
    'age',
    'bad',
    'boat',
    'record',
    'result',
    'section',
    'building',
    'mouse',
    'cash',
    'class',
    'period',
    'plan',
    'store',
    'tax',
    'side',
    'subject',
    'space',
    'rule',
    'stock',
    'weather',
    'chance',
    'figure',
    'man',
    'model',
    'source',
    'beginning',
    'earth',
    'program',
    'chicken',
    'design',
    'feature',
    'head',
    'material',
    'purpose',
    'question',
    'rock',
    'salt',
    'act',
    'birth',
    'car',
    'dog',
    'object',
    'scale',
    'sun',
    'note',
    'profit',
    'rent',
    'speed',
    'style',
    'war',
    'bank',
    'craft',
    'half',
    'inside',
    'outside',
    'standard',
    'bus',
    'exchange',
    'eye',
    'fire',
    'position',
    'pressure',
    'stress',
    'advantage',
    'benefit',
    'box',
    'frame',
    'issue',
    'step',
    'cycle',
    'face',
    'item',
    'metal',
    'paint',
    'review',
    'room',
    'screen',
    'structure',
    'view',
    'account',
    'ball',
    'discipline',
    'medium',
    'share',
    'balance',
    'bit',
    'black',
    'bottom',
    'choice',
    'gift',
    'impact',
    'machine',
    'shape',
    'tool',
    'wind',
    'address',
    'average',
    'career',
    'culture',
    'morning',
    'pot',
    'sign',
    'table',
    'task',
    'condition',
    'contact',
    'credit',
    'egg',
    'hope',
    'ice',
    'network',
    'north',
    'square',
    'attempt',
    'date',
    'effect',
    'link',
    'post',
    'star',
    'voice',
    'capital',
    'challenge',
    'friend',
    'self',
    'shot',
    'brush',
    'couple',
    'exit',
    'front',
    'function',
    'lack',
    'living',
    'plant',
    'plastic',
    'spot',
    'summer',
    'taste',
    'theme',
    'track',
    'wing',
    'brain',
    'button',
    'click',
    'desire',
    'foot',
    'gas',
    'influence',
    'notice',
    'rain',
    'wall',
    'base',
    'damage',
    'distance',
    'feeling',
    'pair',
    'savings',
    'staff',
    'sugar',
    'target',
    'text',
    'animal',
    'author',
    'budget',
    'discount',
    'file',
    'ground',
    'lesson',
    'minute',
    'officer',
    'phase',
    'reference',
    'register',
    'sky',
    'stage',
    'stick',
    'title',
    'trouble',
    'bowl',
    'bridge',
    'campaign',
    'character',
    'club',
    'edge',
    'evidence',
    'fan',
    'letter',
    'lock',
    'maximum',
    'novel',
    'option',
    'pack',
    'park',
    'quarter',
    'skin',
    'sort',
    'weight',
    'baby',
    'background',
    'carry',
    'dish',
    'factor',
    'fruit',
    'glass',
    'joint',
    'master',
    'muscle',
    'red',
    'strength',
    'traffic',
    'trip',
    'vegetable',
    'appeal',
    'chart',
    'gear',
    'ideal',
    'kitchen',
    'land',
    'log',
    'mother',
    'net',
    'party',
    'principle',
    'relative',
    'sale',
    'season',
    'signal',
    'spirit',
    'street',
    'tree',
    'wave',
    'belt',
    'bench',
    'commission',
    'copy',
    'drop',
    'minimum',
    'path',
    'progress',
    'project',
    'sea',
    'south',
    'status',
    'stuff',
    'ticket',
    'tour',
    'angle',
    'blue',
    'breakfast',
    'confidence',
    'daughter',
    'degree',
    'doctor',
    'dot',
    'dream',
    'duty',
    'essay',
    'father',
    'fee',
    'finance',
    'hour',
    'juice',
    'luck',
    'milk',
    'mouth',
    'peace',
    'pipe',
    'stable',
    'storm',
    'substance',
    'team',
    'trick',
    'afternoon',
    'bat',
    'beach',
    'blank',
    'catch',
    'chain',
    'consideration',
    'cream',
    'crew',
    'detail',
    'gold',
    'interview',
    'kid',
    'mark',
    'mission',
    'pain',
    'pleasure',
    'score',
    'screw',
    'sex',
    'shop',
    'shower',
    'suit',
    'tone',
    'window',
    'agent',
    'band',
    'bath',
    'block',
    'bone',
    'calendar',
    'candidate',
    'cap',
    'coat',
    'contest',
    'corner',
    'court',
    'cup',
    'district',
    'door',
    'east',
    'finger',
    'garage',
    'guarantee',
    'hole',
    'hook',
    'implement',
    'layer',
    'lecture',
    'lie',
    'manner',
    'meeting',
    'nose',
    'parking',
    'partner',
    'profile',
    'rice',
    'routine',
    'schedule',
    'swimming',
    'telephone',
    'tip',
    'winter',
    'airline',
    'bag',
    'battle',
    'bed',
    'bill',
    'bother',
    'cake',
    'code',
    'curve',
    'designer',
    'dimension',
    'dress',
    'ease',
    'emergency',
    'evening',
    'extension',
    'farm',
    'fight',
    'gap',
    'grade',
    'holiday',
    'horror',
    'horse',
    'host',
    'husband',
    'loan',
    'mistake',
    'mountain',
    'nail',
    'noise',
    'occasion',
    'package',
    'patient',
    'pause',
    'phrase',
    'proof',
    'race',
    'relief',
    'sand',
    'sentence',
    'shoulder',
    'smoke',
    'stomach',
    'string',
    'tourist',
    'towel',
    'vacation',
    'west',
    'wheel',
    'wine',
    'arm',
    'aside',
    'associate',
    'bet',
    'blow',
    'border',
    'branch',
    'breast',
    'brother',
    'buddy',
    'bunch',
    'chip',
    'coach',
    'cross',
    'document',
    'draft',
    'dust',
    'expert',
    'floor',
    'god',
    'golf',
    'habit',
    'iron',
    'judge',
    'knife',
    'landscape',
    'league',
    'mail',
    'mess',
    'native',
    'opening',
    'parent',
    'pattern',
    'pin',
    'pool',
    'pound',
    'request',
    'salary',
    'shame',
    'shelter',
    'shoe',
    'silver',
    'tackle',
    'tank',
    'trust',
    'assist',
    'bake',
    'bar',
    'bell',
    'bike',
    'blame',
    'boy',
    'brick',
    'chair',
    'closet',
    'clue',
    'collar',
    'comment',
    'conference',
    'devil',
    'diet',
    'fear',
    'fuel',
    'glove',
    'jacket',
    'lunch',
    'monitor',
    'mortgage',
    'nurse',
    'pace',
    'panic',
    'peak',
    'plane',
    'reward',
    'row',
    'sandwich',
    'shock',
    'spite',
    'spray',
    'surprise',
    'till',
    'transition',
    'weekend',
    'welcome',
    'yard',
    'alarm',
    'bend',
    'bicycle',
    'bite',
    'blind',
    'bottle',
    'cable',
    'candle',
    'clerk',
    'cloud',
    'concert',
    'counter',
    'flower',
    'grandfather',
    'harm',
    'knee',
    'lawyer',
    'leather',
    'load',
    'mirror',
    'neck',
    'pension',
    'plate',
    'purple',
    'ruin',
    'ship',
    'skirt',
    'slice',
    'snow',
    'specialist',
    'stroke',
    'switch',
    'trash',
    'tune',
    'zone',
    'anger',
    'award',
    'bid',
    'bitter',
    'boot',
    'bug',
    'camp',
    'candy',
    'carpet',
    'cat',
    'champion',
    'channel',
    'clock',
    'comfort',
    'cow',
    'crack',
    'engineer',
    'entrance',
    'fault',
    'grass',
    'guy',
    'hell',
    'highlight',
    'incident',
    'island',
    'joke',
    'jury',
    'leg',
    'lip',
    'mate',
    'motor',
    'nerve',
    'passage',
    'pen',
    'pride',
    'priest',
    'prize',
    'promise',
    'resident',
    'resort',
    'ring',
    'roof',
    'rope',
    'sail',
    'scheme',
    'script',
    'sock',
    'station',
    'toe',
    'tower',
    'truck',
    'witness',
    'can',
    'will',
    'other',
    'use',
    'make',
    'good',
    'look',
    'help',
    'go',
    'great',
    'being',
    'still',
    'public',
    'read',
    'keep',
    'start',
    'give',
    'human',
    'local',
    'general',
    'specific',
    'long',
    'play',
    'feel',
    'high',
    'put',
    'common',
    'set',
    'change',
    'simple',
    'past',
    'big',
    'possible',
    'particular',
    'major',
    'personal',
    'current',
    'national',
    'cut',
    'natural',
    'physical',
    'show',
    'try',
    'check',
    'second',
    'call',
    'move',
    'pay',
    'let',
    'increase',
    'single',
    'individual',
    'turn',
    'ask',
    'buy',
    'guard',
    'hold',
    'main',
    'offer',
    'potential',
    'professional',
    'international',
    'travel',
    'cook',
    'alternative',
    'special',
    'working',
    'whole',
    'dance',
    'excuse',
    'cold',
    'commercial',
    'low',
    'purchase',
    'deal',
    'primary',
    'worth',
    'fall',
    'necessary',
    'positive',
    'produce',
    'search',
    'present',
    'spend',
    'talk',
    'creative',
    'tell',
    'cost',
    'drive',
    'green',
    'support',
    'glad',
    'remove',
    'return',
    'run',
    'complex',
    'due',
    'effective',
    'middle',
    'regular',
    'reserve',
    'independent',
    'leave',
    'original',
    'reach',
    'rest',
    'serve',
    'watch',
    'beautiful',
    'charge',
    'active',
    'break',
    'negative',
    'safe',
    'stay',
    'visit',
    'visual',
    'affect',
    'cover',
    'report',
    'rise',
    'walk',
    'white',
    'junior',
    'pick',
    'unique',
    'classic',
    'final',
    'lift',
    'mix',
    'private',
    'stop',
    'teach',
    'western',
    'concern',
    'familiar',
    'fly',
    'official',
    'broad',
    'comfortable',
    'gain',
    'rich',
    'save',
    'stand',
    'young',
    'heavy',
    'lead',
    'listen',
    'valuable',
    'worry',
    'handle',
    'leading',
    'meet',
    'release',
    'sell',
    'finish',
    'normal',
    'press',
    'ride',
    'secret',
    'spread',
    'spring',
    'tough',
    'wait',
    'brown',
    'deep',
    'display',
    'flow',
    'hit',
    'objective',
    'shoot',
    'touch',
    'cancel',
    'chemical',
    'cry',
    'dump',
    'extreme',
    'push',
    'conflict',
    'eat',
    'fill',
    'formal',
    'jump',
    'kick',
    'opposite',
    'pass',
    'pitch',
    'remote',
    'total',
    'treat',
    'vast',
    'abuse',
    'beat',
    'burn',
    'deposit',
    'print',
    'raise',
    'sleep',
    'somewhere',
    'advance',
    'consist',
    'dark',
    'double',
    'draw',
    'equal',
    'fix',
    'hire',
    'internal',
    'join',
    'kill',
    'sensitive',
    'tap',
    'win',
    'attack',
    'claim',
    'constant',
    'drag',
    'drink',
    'guess',
    'minor',
    'pull',
    'raw',
    'soft',
    'solid',
    'wear',
    'weird',
    'wonder',
    'annual',
    'count',
    'dead',
    'doubt',
    'feed',
    'forever',
    'impress',
    'repeat',
    'round',
    'sing',
    'slide',
    'strip',
    'wish',
    'combine',
    'command',
    'dig',
    'divide',
    'equivalent',
    'hang',
    'hunt',
    'initial',
    'march',
    'mention',
    'spiritual',
    'survey',
    'tie',
    'adult',
    'brief',
    'crazy',
    'escape',
    'gather',
    'hate',
    'prior',
    'repair',
    'rough',
    'sad',
    'scratch',
    'sick',
    'strike',
    'employ',
    'external',
    'hurt',
    'illegal',
    'laugh',
    'lay',
    'mobile',
    'nasty',
    'ordinary',
    'respond',
    'royal',
    'senior',
    'split',
    'strain',
    'struggle',
    'swim',
    'train',
    'upper',
    'wash',
    'yellow',
    'convert',
    'crash',
    'dependent',
    'fold',
    'funny',
    'grab',
    'hide',
    'miss',
    'permit',
    'quote',
    'recover',
    'resolve',
    'roll',
    'sink',
    'slip',
    'spare',
    'suspect',
    'sweet',
    'swing',
    'twist',
    'upstairs',
    'usual',
    'abroad',
    'brave',
    'calm',
    'concentrate',
    'estimate',
    'grand',
    'male',
    'mine',
    'prompt',
    'quiet',
    'refuse',
    'regret',
    'reveal',
    'rush',
    'shake',
    'shift',
    'shine',
    'steal',
    'suck',
    'surround',
    'bear',
    'brilliant',
    'dare',
    'dear',
    'delay',
    'drunk',
    'female',
    'hurry',
    'inevitable',
    'invite',
    'kiss',
    'neat',
    'pop',
    'punch',
    'quit',
    'reply',
    'representative',
    'resist',
    'rip',
    'rub',
    'silly',
    'smile',
    'spell',
    'stretch',
    'stupid',
    'tear',
    'temporary',
    'tomorrow',
    'wake',
    'wrap',
    'yesterday',
    'Thomas',
    'Tom',
    'Lieuwe',
  ];

  var name = capFirst(name1[getRandomInt(0, name1.length + 1)]);

  return name;
};
